INSERT INTO t_question (
    Question_text, 
    OptionA, 
    OptionB, 
    OptionC, 
    OptionD, 
    Correct_answer, 
    Topic, 
    Language, 
    Difficulty_level, 
    Record_created_by, 
    Record_created_on, 
    Record_updated_by, 
    Record_updated_on, 
    Record_status
) VALUES
("Which keyword is used to create a class in Java?", "class", "object", "new", "struct", "A", "Classes and Objects", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the process of creating an object called?", "Instantiation", "Objectification", "Classing", "Casting", "A", "Classes and Objects", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following is a correct way to declare a class in Java?", "class MyClass {}", "object MyClass {}", "new MyClass {}", "struct MyClass {}", "A", "Classes and Objects", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("How do you create an instance of a class in Java?", "MyClass obj = new MyClass();", "MyClass obj = MyClass();", "new obj MyClass();", "MyClass obj = create MyClass();", "A", "Classes and Objects", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the default value of an object reference variable in Java?", "null", "undefined", "0", "empty", "A", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following is an example of a constructor?", "public MyClass() {}", "public void MyClass() {}", "public int MyClass() {}", "public class MyClass() {}", "A", "Object Declaration", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is an object in Java?", "An instance of a class", "A blueprint of a class", "A method inside a class", "A class variable", "A", "Classes and Objects", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which method is called when an object is created?", "constructor", "destructor", "initializer", "new", "A", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which keyword is used to create an object in Java?", "new", "create", "make", "object", "A", "Classes and Objects", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What happens when an object is created using the 'new' keyword?", "Memory is allocated for the object", "A reference to the class is stored", "An object is destroyed", "Both A and B", "D", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the lifecycle of an object in Java?", "Creation, usage, destruction", "Declaration, usage, garbage collection", "Instantiation, use, finalize", "All of the above", "D", "Lifecycle of Object", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the purpose of a constructor?", "To initialize the object", "To declare a class", "To execute a class", "To destroy the object", "A", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following is NOT a feature of a class?", "Encapsulation", "Abstraction", "Inheritance", "Copying", "D", "Classes and Features", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What does the 'this' keyword refer to in a class?", "The current instance of the class", "The name of the class", "The parent class", "A static method", "A", "Classes and Features", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following statements is true about object initialization?", "Constructors are automatically called during object creation", "Objects must be manually initialized", "Classes do not require constructors", "An object is initialized after the first method call", "A", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is an anonymous object in Java?", "An object without a reference variable", "An object with a reference variable", "A static object", "A private object", "A", "Anonymous Object", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("When should anonymous objects be used?", "When the object is used only once", "When multiple objects are needed", "For static methods", "In class-level methods", "A", "Anonymous Object", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which method is automatically called before an object is destroyed?", "finalize()", "destroy()", "destructor()", "delete()", "A", "Lifecycle of Object", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is a static class in Java?", "A class that cannot be instantiated", "A class that belongs to a static method", "A class with only static methods", "A class that does not require object creation", "A", "Types of Classes", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the correct way to create a nested class in Java?", "class Outer { class Inner {} }", "class Outer class Inner {}", "class Outer { static Inner {} }", "class Inner { class Outer {} }", "A", "Types of Classes", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following cannot be inherited in Java?", "Constructors", "Methods", "Fields", "Nested classes", "A", "Inheritance and Classes", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the purpose of 'super' keyword in Java?", "To refer to the superclass", "To refer to the subclass", "To call a static method", "To invoke the destructor", "A", "Classes and Features", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following is true about object-oriented programming?", "It uses classes and objects to model real-world entities", "It avoids inheritance and encapsulation", "It does not support abstraction", "It requires procedural programming", "A", "Classes and Objects", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is a local class in Java?", "A class defined within a method", "A class with local variables", "A class with local objects", "A class that cannot be inherited", "A", "Types of Classes", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following correctly describes object declaration in Java?", "It defines the class type and allocates memory for it", "It only defines the class type", "It allocates memory without initialization", "It creates a reference to an object", "D", "Object Declaration", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following is not a valid object lifecycle phase?", "Destruction", "Usage", "Abstraction", "Creation", "C", "Lifecycle of Object", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("In Java, what is the difference between declaring and initializing an object?", "Declaration provides the class type, initialization allocates memory", "Initialization occurs after object usage", "Declaration allocates memory for an object", "Both perform the same function", "A", "Object Declaration and Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What will happen if you try to use an uninitialized object?", "NullPointerException", "ClassCastException", "ArrayIndexOutOfBoundsException", "IllegalArgumentException", "A", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following is true about constructors?", "Constructors can be overloaded", "Constructors cannot have parameters", "Constructors must be public", "Constructors must be static", "A", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the default value of an integer field in a Java object?", "0", "null", "undefined", "1", "A", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following correctly describes the lifecycle of an anonymous object?", "It is created, used, and discarded immediately", "It is created and stored for future use", "It cannot be used more than once", "It is garbage collected immediately after creation", "A", "Anonymous Object", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the main characteristic of a static method in Java?", "It belongs to the class, not to instances of the class", "It can only be called by an instance of the class", "It cannot access static variables", "It cannot return a value", "A", "Classes and Features", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which method can be used to check if two objects are equal in Java?", "equals()", "compareTo()", "isEqual()", "==", "A", "Classes and Features", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the default access modifier for classes in Java?", "Package-private", "Public", "Protected", "Private", "A", "Classes and Objects", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following defines the memory location of an object?", "Reference variable", "Object name", "Method call", "Object creation", "A", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What happens to an object when it is no longer referenced in Java?", "It is marked for garbage collection", "It throws an exception", "It is removed from memory immediately", "It is copied to another reference", "A", "Lifecycle of Object", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following describes encapsulation in Java?", "Bundling data and methods together in a class", "Separating methods from data", "Creating classes without methods", "Creating objects without variables", "A", "Classes and Features", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which keyword is used to prevent a class from being subclassed?", "final", "static", "abstract", "extends", "A", "Classes and Objects", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the output of the following code?\nclass MyClass {}\nMyClass obj = new MyClass();\nSystem.out.println(obj);", "Memory address of the object", "Name of the class", "Error", "Reference to the object", "A", "Classes and Objects", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following is NOT a part of the object lifecycle in Java?", "Memory allocation", "Method call", "Reference deletion", "Thread execution", "D", "Lifecycle of Object", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following is true about inner classes in Java?", "They can access members of the outer class", "They cannot be instantiated directly", "They must be static", "They cannot have methods", "A", "Types of Classes", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the difference between an abstract class and an interface?", "An abstract class can have implemented methods", "An interface can have private methods", "An interface can be instantiated", "Both are the same", "A", "Types of Classes", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("How can you prevent an object from being modified after it is created?", "Declare the object as final", "Make the constructor private", "Use the static keyword", "Use the protected keyword", "A", "Object Declaration and Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which method is called automatically when an object is garbage collected?", "finalize()", "destroy()", "cleanup()", "delete()", "A", "Lifecycle of Object", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is the use of the 'new' keyword in object creation?", "Allocates memory and returns a reference", "Initializes the object", "Executes a constructor", "All of the above", "D", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following cannot be called from a static method?", "Non-static instance methods", "Static variables", "Static methods", "Static blocks", "A", "Classes and Features", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What happens if an object reference is set to null?", "It becomes eligible for garbage collection", "It throws an exception", "It is destroyed immediately", "It remains in memory", "A", "Lifecycle of Object", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("What is a 'null' object reference in Java?", "An uninitialized object", "An empty object", "A method call", "A memory address", "A", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following describes inheritance in Java?", "A class acquires properties of another class", "An object acquires properties of a class", "Methods are overridden in subclasses", "A class contains another class", "A", "Classes and Features", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active"),
("Which of the following correctly describes object creation?", "Memory is allocated, and the constructor is called", "An object is stored in memory without allocation", "The reference is initialized, but memory is not allocated", "None of the above", "A", "Object Initialization", "Java", "Easy", "admin", NOW(), "admin", NOW(), "active");



INSERT INTO t_question (
    Question_text, 
    OptionA, 
    OptionB, 
    OptionC, 
    OptionD, 
    Correct_answer, 
    Topic, 
    Language, 
    Difficulty_level, 
    Record_created_by, 
    Record_created_on, 
    Record_updated_by, 
    Record_updated_on, 
    Record_status
)
VALUES
("Which method is used to destroy an object in Java?", "You cannot explicitly destroy an object", "delete()", "destroy()", "final()", "A", "Lifecycle of Object", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is NOT a valid feature of a constructor in Java?", "It can return a value", "It can be overloaded", "It has the same name as the class", "It does not have a return type", "A", "Object Initialization", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the output of the following code?\nObject obj = new Object();\nSystem.out.println(obj.toString());", "Class name followed by memory address", "Class name only", "Object reference", "Error", "A", "Classes and Objects", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("How can you make a class non-instantiable?", "Declare the constructor private", "Use the static keyword", "Use the final keyword", "Declare the class protected", "A", "Types of Classes", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following correctly describes polymorphism in Java?", "An object can take many forms", "A class can inherit multiple methods", "Methods can be overridden", "A method can have multiple signatures", "A", "Classes and Features", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the purpose of a copy constructor?", "To create a new object as a copy of an existing object", "To initialize static variables", "To override a method", "To create anonymous objects", "A", "Object Initialization", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following describes method overloading?", "Methods with the same name but different parameters", "Methods with different names and parameters", "Methods with different return types only", "Overriding a method in a subclass", "A", "Classes and Features", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("In Java, which class acts as the superclass for all classes?", "Object", "Class", "Base", "Main", "A", "Classes and Objects", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is true about object references in Java?", "They store the memory address of the object", "They store the actual object", "They are primitive data types", "They cannot be modified", "A", "Object Initialization", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which keyword is used to refer to the superclass constructor?", "super", "this", "extends", "parent", "A", "Classes and Features", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following cannot be instantiated in Java?", "Abstract classes", "Nested classes", "Static classes", "Anonymous classes", "A", "Types of Classes", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is an abstract class in Java?", "A class that cannot be instantiated", "A class with only static methods", "A class without methods", "A class without variables", "A", "Types of Classes", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the output of the following code?\npublic class Test {\n    public static void main(String[] args) {\n        Test obj = new Test();\n        obj = null;\n        System.gc();\n    }\n    protected void finalize() throws Throwable {\n        System.out.println(""Finalized"");\n    }\n}","Finalized","Error","NullPointerException","Nothing happens","A", "Lifecycle of Object", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is true about an anonymous class in Java?", "It has no name and is defined in a single line", "It cannot have methods", "It must extend another class", "It must implement an interface", "A", "Anonymous Object", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the difference between a static and non-static nested class?", "Static nested classes cannot access non-static members of the outer class", "Non-static nested classes cannot access static members", "Static nested classes can only be instantiated inside the outer class", "Non-static nested classes are not part of the class hierarchy", "A", "Types of Classes", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the role of the 'finalize()' method in Java?", "It is called before an object is garbage collected", "It is used to finalize variable values", "It destroys an object immediately", "It is called during object creation", "A", "Lifecycle of Object", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following defines the lifetime of a static variable?", "It exists as long as the class is loaded", "It exists only during object creation", "It is destroyed after method execution", "It is created and destroyed with the object", "A", "Classes and Features", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is a feature of inner classes?", "They have access to the outer class's members", "They cannot be instantiated directly", "They must be declared public", "They cannot have constructors", "A", "Types of Classes", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the output of the following code?\nclass A {}\nclass B extends A {}\nA a = new B();\nSystem.out.println(a instanceof B);","true","false","Error","NullPointerException","A", "Classes and Features", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following statements is true about inheritance?", "A subclass can inherit from only one class in Java", "A subclass can inherit from multiple classes in Java", "A class can inherit from multiple interfaces only", "Inheritance is optional in OOP", "A", "Classes and Features", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is NOT true about abstract classes?", "They can have non-abstract methods", "They cannot be instantiated", "They can be subclassed", "They must have abstract methods", "D", "Types of Classes", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the output of the following code?\nclass A {\n    public A() { System.out.println(""A's constructor""); }\n}\nclass B extends A {\n    public B() { System.out.println(""B's constructor""); }\n}\npublic class Test {\n    public static void main(String[] args) {\n        B b = new B();\n    }\n}","A's constructor\nB's constructor","B's constructor only","A's constructor only","Error","A", "Classes and Features", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following statements is true about garbage collection in Java?", "It is a process of reclaiming memory from objects that are no longer in use", "It destroys all objects after program execution", "It is a manual process in Java", "It is controlled by the finalize method", "A", "Lifecycle of Object", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the output of the following code?\nclass A {}\nclass B extends A {}\nA a = new B();\nSystem.out.println(a instanceof A);","true","false","Error","NullPointerException","A", "Classes and Features", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the purpose of the 'instanceof' operator?", "To check if an object is an instance of a specific class", "To create a new instance of a class", "To compare two objects", "To invoke a constructor", "A", "Classes and Features", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the main feature of an interface in Java?", "It defines a contract for classes to implement", "It can have constructors", "It allows object creation", "It cannot have methods", "A", "Classes and Features", "Java", 'Medium', 'Admin', NOW(), 'Admin', NOW(), 'Active');



INSERT INTO t_question (
    Question_text, 
    OptionA, 
    OptionB, 
    OptionC, 
    OptionD, 
    Correct_answer, 
    Topic, 
    Language, 
    Difficulty_level, 
    Record_created_by, 
    Record_created_on, 
    Record_updated_by, 
    Record_updated_on, 
    Record_status
)
VALUES
("Which of the following best describes a covariant return type in Java?", "Return type of an overridden method is a subclass of the return type in the parent class", "Return type of an overridden method must be the same as in the parent class", "Return type can only be primitive types", "Return type of an overridden method must be an interface", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the primary purpose of the ClassLoader in Java?", "To load classes at runtime", "To destroy objects", "To allocate memory for objects", "To instantiate abstract classes", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is an inner class in Java?", "A class defined within another class", "A class without methods", "A class that can only be instantiated once", "A class that is an instance of another class", "A", "Types of Classes", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is true about the finalize() method?", "It may not be called before garbage collection", "It is called automatically when an object is instantiated", "It is called to explicitly destroy objects", "It must be manually called to clean up resources", "A", "Lifecycle of Object", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What happens if two objects have the same hashCode but are not equal()?", "They can still exist in a HashMap, but collision handling will be required", "They cannot be inserted into the same HashMap", "The program will throw an error", "They must be removed manually", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is a restriction on static nested classes?", "They cannot access non-static members of the outer class", "They must be declared as final", "They cannot implement interfaces", "They cannot contain constructors", "A", "Types of Classes", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("In Java, which keyword ensures that an object is read-only?", "final", "const", "static", "volatile", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the primary benefit of using the 'super()' constructor in Java?", "It allows calling the parent class constructor", "It allows accessing private variables of the parent class", "It ensures the current object is destroyed", "It enforces the parent class method execution", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following correctly describes the term 'composition' in OOP?", "An object contains another object as a part", "An object inherits methods from another class", "An object can be instantiated without a constructor", "An object calls a static method", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is not a valid use of the 'this' keyword?", "To call another constructor in the same class", "To access the current class's static members", "To refer to the current object", "To pass the current object as a parameter", "B", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is true about anonymous inner classes?", "They can extend one class or implement one interface", "They can extend multiple classes", "They cannot have constructors", "They can only implement interfaces", "A", "Anonymous Object", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following types of classes cannot be instantiated directly?", "Abstract classes", "Concrete classes", "Static classes", "Final classes", "A", "Types of Classes", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following correctly describes a constructor chain?", "A sequence of constructor calls starting from the subclass and propagating up to the superclass", "A series of overloaded constructors in the same class", "A sequence of methods calling one another", "A set of constructors with the same parameter list", "A", "Object Initialization", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What happens if a constructor throws an exception during object creation?", "The object will not be created, and the constructor will terminate", "The object will be created, but its state will be undefined", "The constructor will be retried", "The program will continue with a default object", "A", "Object Initialization", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following best describes 'encapsulation'?", "Hiding the implementation details and exposing only the necessary interfaces", "Allowing direct access to class members", "Creating objects without constructors", "Using static methods to create objects", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the significance of the 'volatile' keyword in Java?", "It ensures that changes to a variable are visible to all threads", "It makes an object immutable", "It prevents the object from being garbage collected", "It allows the object to be destroyed immediately", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is not true about a 'static' method in Java?", "It can access instance variables", "It belongs to the class rather than the object", "It can be called without creating an object of the class", "It can access other static methods of the class", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What happens when an object is eligible for garbage collection in Java?", "It may or may not be immediately destroyed by the JVM", "It is destroyed immediately by the JVM", "It throws a runtime exception", "It must be manually deleted by the programmer", "A", "Lifecycle of Object", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following describes constructor overloading?", "Defining multiple constructors in the same class with different parameters", "Defining a constructor in both the parent and child class", "Using the same constructor for multiple classes", "Calling multiple constructors from a method", "A", "Object Initialization", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is true about the 'strictfp' keyword in Java?", "It restricts floating-point calculations to ensure consistency across platforms", "It forces garbage collection", "It ensures methods cannot throw exceptions", "It prevents the use of interfaces", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the primary advantage of using an interface over an abstract class?", "A class can implement multiple interfaces", "Interfaces cannot have default methods", "Interfaces cannot have any fields", "Interfaces cannot be extended", "A", "Types of Classes", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following best describes the lifecycle of an object in Java?", "Creation, usage, eligible for garbage collection, destruction", "Creation, destruction, garbage collection, usage", "Creation, garbage collection, destruction, finalization", "Destruction, finalization, usage, creation", "A", "Lifecycle of Object", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following best describes object cloning in Java?", "Creating a copy of an object with the same state", "Creating a new object from a superclass", "Overriding the toString() method", "Copying references between objects", "A", "Object Initialization", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the purpose of the 'assert' keyword in Java?", "To test assumptions in code during runtime", "To declare a static method", "To finalize an object before garbage collection", "To enforce constructor execution", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("In the context of garbage collection, what is a 'finalizer'?", "A method that is called just before an object is garbage collected", "A method that destroys an object", "A method that checks if an object is null", "A method that immediately stops the program", "A", "Lifecycle of Object", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is true about anonymous objects in Java?", "They are created without explicitly naming the object", "They must be assigned to a variable", "They can only be used in interfaces", "They are destroyed immediately after use", "A", "Anonymous Object", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the significance of the 'transient' keyword in Java?", "It marks variables that should not be serialized", "It allows static methods to override instance methods", "It prevents a method from being overridden", "It makes objects eligible for garbage collection immediately", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is true about final methods in Java?", "They cannot be overridden by subclasses", "They can be overloaded", "They cannot be accessed by the subclass", "They must be static", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("In the context of inner classes, which of the following is true?", "Non-static inner classes can access the outer class's non-static members", "Non-static inner classes cannot access static members of the outer class", "Static inner classes must be instantiated using the outer class instance", "Non-static inner classes can only access private members of the outer class", "A", "Types of Classes", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following best describes the behavior of the 'new' keyword in Java?", "It allocates memory for a new object and calls the constructor", "It creates a reference without allocating memory", "It calls the static method of a class", "It finalizes an object before it is used", "A", "Object Initialization", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is true about singleton classes?", "They allow only one instance to be created during the lifetime of a program", "They cannot have constructors", "They can only have static methods", "They cannot be serialized", "A", "Types of Classes", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is true about overriding static methods?", "Static methods cannot be overridden", "Static methods can be overridden by subclasses", "Static methods are always final", "Static methods cannot have the same name as non-static methods", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What happens when the 'this()' constructor is used in a class?", "It calls another constructor within the same class", "It refers to the static members of the class", "It overrides the default constructor", "It must be used before calling any method", "A", "Object Initialization", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following best describes the term 'late binding' in Java?", "The method to be executed is determined at runtime based on the object's actual class", "The method to be executed is determined at compile time", "The object is destroyed after method execution", "The object is created after the method is executed", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the primary purpose of the 'default' keyword in Java interfaces?", "To allow methods with a default implementation", "To prevent methods from being overridden", "To make methods private", "To declare static methods", "A", "Types of Classes", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is a key difference between interfaces and abstract classes?", "Interfaces cannot have constructors, while abstract classes can", "Interfaces can have fields, but abstract classes cannot", "Interfaces can be instantiated directly, but abstract classes cannot", "Interfaces are slower than abstract classes", "A", "Types of Classes", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the output of the following code? class A { public void display() { System.out.println('A'); } } class B extends A { public void display() { System.out.println('B'); } } A obj = new B(); obj.display();", "B", "A", "Error", "NullPointerException", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("Which of the following is a correct example of method overriding in Java?", "class A { public void show() {} } class B extends A { public void show() {} }", "class A { public void show() {} } class B { public void show() {} }", "class A { private void show() {} } class B extends A { public void show() {} }", "class A { static void show() {} } class B extends A { public void show() {} }", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active'),
("What is the role of the 'synchronized' keyword in Java?", "It ensures that a block of code is accessed by only one thread at a time", "It allows multiple objects to be created in parallel", "It prevents method overriding", "It makes an object immutable", "A", "Classes and Features", "Java", 'Hard', 'Admin', NOW(), 'Admin', NOW(), 'Active');

